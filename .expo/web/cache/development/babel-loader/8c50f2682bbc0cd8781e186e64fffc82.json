{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/mizan/MobileApp/Grocery/components/UI/Input.js\";\n\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Colors from \"../../constants/Colors\";\n\nvar Input = function Input(props) {\n  return React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: props.placeholder,\n    name: props.name,\n    id: props.id,\n    value: props.value,\n    autoCorrect: props.autoCorrect,\n    onChangeText: props.onChangeText,\n    onFocus: props.onFocus,\n    secureTextEntry: props.secureTextEntry,\n    keyboardType: props.keyboardType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    width: '80%',\n    height: 60,\n    backgroundColor: 'white',\n    margin: 10,\n    borderRadius: 20,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: Colors.primary\n  }\n});\nexport default Input;","map":{"version":3,"sources":["/home/mizan/MobileApp/Grocery/components/UI/Input.js"],"names":["React","Colors","Input","props","styles","input","placeholder","name","id","value","autoCorrect","onChangeText","onFocus","secureTextEntry","keyboardType","StyleSheet","create","width","height","backgroundColor","margin","borderRadius","padding","borderWidth","borderColor","primary"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,MAAP;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACrB,SACI,oBAAC,SAAD;AACA,IAAA,KAAK,EAAEC,MAAM,CAACC,KADd;AAEA,IAAA,WAAW,EAAEF,KAAK,CAACG,WAFnB;AAGA,IAAA,IAAI,EAAEH,KAAK,CAACI,IAHZ;AAIA,IAAA,EAAE,EAAEJ,KAAK,CAACK,EAJV;AAKA,IAAA,KAAK,EAAEL,KAAK,CAACM,KALb;AAMA,IAAA,WAAW,EAAEN,KAAK,CAACO,WANnB;AAOA,IAAA,YAAY,EAAEP,KAAK,CAACQ,YAPpB;AAQA,IAAA,OAAO,EAAER,KAAK,CAACS,OARf;AASA,IAAA,eAAe,EAAET,KAAK,CAACU,eATvB;AAUA,IAAA,YAAY,EAAEV,KAAK,CAACW,YAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAeH,CAhBD;;AAkBA,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;AAC7BX,EAAAA,KAAK,EAAE;AACHY,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,eAAe,EAAE,OAHd;AAIHC,IAAAA,MAAM,EAAE,EAJL;AAKHC,IAAAA,YAAY,EAAE,EALX;AAMHC,IAAAA,OAAO,EAAE,EANN;AAOHC,IAAAA,WAAW,EAAE,CAPV;AAQHC,IAAAA,WAAW,EAAEvB,MAAM,CAACwB;AARjB;AADsB,CAAlB,CAAf;AAaA,eAAevB,KAAf","sourcesContent":["import React from 'react';\nimport { TextInput, StyleSheet } from 'react-native'\nimport Colors  from '../../constants/Colors';\n\nconst Input = (props) => {\n    return (\n        <TextInput\n        style={styles.input}\n        placeholder={props.placeholder}\n        name={props.name}\n        id={props.id}\n        value={props.value}\n        autoCorrect={props.autoCorrect}\n        onChangeText={props.onChangeText}\n        onFocus={props.onFocus}\n        secureTextEntry={props.secureTextEntry}\n        keyboardType={props.keyboardType}\n        >\n        </TextInput>\n    );\n}\n\nconst styles = StyleSheet.create({\n    input: {\n        width: '80%',\n        height: 60,\n        backgroundColor: 'white',\n        margin: 10,\n        borderRadius: 20,\n        padding: 10,\n        borderWidth: 2,\n        borderColor: Colors.primary\n    },\n});\n\nexport default Input;\n\n\n// import React, { useReducer, useEffect } from \"react\";\n// import { View, Text, TextInput, StyleSheet } from \"react-native\";\n\n// const INPUT_CHANGE = \"INPUT_CHANGE\";\n// const INPUT_BLUR = \"INPUT_BLUR\";\n\n// const inputReducer = (state, action) => {\n//   switch (action.type) {\n//     case INPUT_CHANGE:\n//       return {\n//         ...state,\n//         value: action.value,\n//         isValid: action.isValid,\n//       };\n//     case INPUT_BLUR:\n//       return {\n//         ...state,\n//         touched: true,\n//       };\n//     default:\n//       return state;\n//   }\n// };\n\n// const Input = (props) => {\n//   const [inputState, dispatch] = useReducer(inputReducer, {\n//     value: props.initialValue ? props.initialValue : \"\",\n//     isValid: props.initiallyValid,\n//     touched: false,\n//   });\n\n//   const { onInputChange, id } = props;\n\n//   useEffect(() => {\n//     if (inputState.touched) {\n//       onInputChange(id, inputState.value, inputState.isValid);\n//     }\n//   }, [inputState, onInputChange, id]);\n\n//   const textChangeHandler = (text) => {\n//     const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n//     let isValid = true;\n//     if (props.required && text.trim().length === 0) {\n//       isValid = false;\n//     }\n//     if (props.email && !emailRegex.test(text.toLowerCase())) {\n//       isValid = false;\n//     }\n//     if (props.min != null && +text < props.min) {\n//       isValid = false;\n//     }\n//     if (props.max != null && +text > props.max) {\n//       isValid = false;\n//     }\n//     if (props.minLength != null && text.length < props.minLength) {\n//       isValid = false;\n//     }\n//     dispatch({ type: INPUT_CHANGE, value: text, isValid: isValid });\n//   };\n\n//   const lostFocusHandler = () => {\n//     dispatch({ type: INPUT_BLUR });\n//   };\n\n//   return (\n//     <View style={styles.formControl}>\n//       <Text style={styles.label}>{props.label}</Text>\n//       <TextInput\n//         {...props}\n//         style={styles.input}\n//         value={inputState.value}\n//         onChangeText={textChangeHandler}\n//         onBlur={lostFocusHandler}\n//       />\n//       {!inputState.isValid && inputState.touched && (\n//         <View style={styles.errorContainer}>\n//           <Text style={styles.errorText}>{props.errorText}</Text>\n//         </View>\n//       )}\n//     </View>\n//   );\n// };\n\n// const styles = StyleSheet.create({\n//   formControl: {\n//     width: \"100%\",\n//   },\n//   label: {\n//     fontFamily: \"open-sans-bold\",\n//     marginVertical: 8,\n//   },\n//   input: {\n//     paddingHorizontal: 2,\n//     paddingVertical: 5,\n//     borderBottomColor: \"#ccc\",\n//     borderBottomWidth: 1,\n//   },\n//   errorContainer: {\n//     marginVertical: 5,\n//   },\n//   errorText: {\n//     fontFamily: \"open-sans\",\n//     color: \"red\",\n//     fontSize: 13,\n//   },\n// });\n\n// export default Input;\n"]},"metadata":{},"sourceType":"module"}