{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/mizan/MobileApp/Grocery/screens/shop/ProductDetailScreen.js\";\n\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Colors from \"../../constants/Colors\";\nimport { addToCart } from \"../../store/actions/cart\";\n\nvar ProductDetailScreen = function ProductDetailScreen(props) {\n  var selectedProduct = props.route.params;\n  var cartItem = useSelector(function (state) {\n    return state.cart.items;\n  });\n  var quantity = 0;\n\n  for (var key in cartItem) {\n    key;\n\n    if (key === selectedProduct.item.id) {\n      quantity = cartItem[key].quantity;\n    }\n  }\n\n  var dispatch = useDispatch();\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.imageContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: selectedProduct.item.image\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.details,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.price,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Price: \\u09F3\", selectedProduct.item.price), React.createElement(Text, {\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, selectedProduct.item.description), React.createElement(View, {\n    style: styles.actions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    buttonStyle: {\n      backgroundColor: \"white\",\n      borderRadius: 60,\n      flex: 1,\n      height: 30,\n      width: 30\n    },\n    titleStyle: {\n      color: \"white\",\n      fontSize: 16\n    },\n    disabled: quantity > 0,\n    color: Colors.primary,\n    title: \"Add to Cart\",\n    onPress: function onPress() {\n      dispatch(addToCart(selectedProduct.item));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport var screenOptions = function screenOptions(navData) {\n  return {\n    headerTitle: navData.route.params.productTitle\n  };\n};\nvar styles = StyleSheet.create({\n  imageContainer: {\n    paddingBottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 300\n  },\n  image: {\n    width: \"100%\",\n    height: 300\n  },\n  actions: {\n    marginVertical: 20,\n    alignItems: \"center\"\n  },\n  details: {\n    paddingTop: 20,\n    paddingBottom: 60,\n    backgroundColor: Colors.primary,\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40\n  },\n  price: {\n    fontSize: 20,\n    color: Colors.white,\n    textAlign: \"center\",\n    marginVertical: 20,\n    fontFamily: \"open-sans-bold\"\n  },\n  description: {\n    fontFamily: \"open-sans\",\n    fontSize: 14,\n    textAlign: \"center\",\n    marginHorizontal: 20\n  }\n});\nexport default ProductDetailScreen;","map":{"version":3,"sources":["/home/mizan/MobileApp/Grocery/screens/shop/ProductDetailScreen.js"],"names":["React","useSelector","useDispatch","Colors","addToCart","ProductDetailScreen","props","selectedProduct","route","params","cartItem","state","cart","items","quantity","key","item","id","dispatch","styles","imageContainer","image","uri","details","price","description","actions","backgroundColor","borderRadius","flex","height","width","color","fontSize","primary","screenOptions","navData","headerTitle","productTitle","StyleSheet","create","paddingBottom","justifyContent","alignItems","marginVertical","paddingTop","borderTopRightRadius","borderTopLeftRadius","white","textAlign","fontFamily","marginHorizontal"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  ScrollView,\n  View,\n  Text,\n  Image,\n  Button,\n  StyleSheet,\n} from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Colors from \"../../constants/Colors\";\nimport { addToCart } from \"../../store/actions/cart\";\n\nconst ProductDetailScreen = (props) => {\n  const selectedProduct = props.route.params\n  // const productId = props.route.params?.productId ?? \"id\";\n  // const selectedProduct = useSelector((state) =>\n  //   state.productList.products.find((prod) => prod._id === productId)\n  // );\n\n\n  const cartItem = useSelector((state) => state.cart.items);\n  let quantity = 0;\n  for (const key in cartItem) {\n    key;\n    if (key === selectedProduct.item.id) {\n      quantity = cartItem[key].quantity;\n    }\n  }\n\n  const dispatch = useDispatch();\n\n  return (\n    <ScrollView>\n      <View style={styles.imageContainer}>\n        <Image style={styles.image} \n        source={{ uri: selectedProduct.item.image }} />\n      </View>\n      <View style={styles.details}>\n        \n        <Text style={styles.price}>Price: à§³{selectedProduct.item.price}</Text>\n        <Text style={styles.description}>{selectedProduct.item.description}</Text>\n        <View style={styles.actions}>\n          <Button\n             buttonStyle={{\n                backgroundColor: \"white\",\n                borderRadius: 60,\n                flex: 1,\n                height: 30,\n                width: 30,  \n            }}\n             titleStyle={{\n              color: \"white\",\n              fontSize: 16,\n          }}\n            disabled={quantity > 0}\n            color={Colors.primary}\n            title=\"Add to Cart\"\n            onPress={() => {\n              dispatch(addToCart(selectedProduct.item));\n            }}\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n};\nexport const screenOptions = (navData) => {\n  return {\n    headerTitle: navData.route.params.productTitle,\n  };\n};\n\nconst styles = StyleSheet.create({\n  imageContainer: {\n    paddingBottom: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 300,\n  },\n  image: {\n    width: \"100%\",\n    height: 300,\n  },\n  actions: {\n    marginVertical: 20,\n    alignItems: \"center\",\n  },\n  details: {\n    // paddingHorizontal: 20,\n    paddingTop: 20,\n    paddingBottom: 60,\n    backgroundColor: Colors.primary,\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40,\n  },\n  price: {\n    fontSize: 20,\n    color: Colors.white,\n    textAlign: \"center\",\n    marginVertical: 20, \n    fontFamily: \"open-sans-bold\",\n  },\n  description: {\n    fontFamily: \"open-sans\",\n    fontSize: 14,\n    textAlign: \"center\",\n    marginHorizontal: 20,\n  },\n});\n\nexport default ProductDetailScreen;\n"]},"metadata":{},"sourceType":"module"}