{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/mizan/MobileApp/Grocery/components/shop/PopUpModal.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Colors from \"../../constants/Colors\";\nimport CartItem from \"./CartItem\";\nimport { decrease } from \"../../store/actions/cart\";\nimport { increase } from \"../../store/actions/cart\";\nimport { addOrder } from \"../../store/actions/orders\";\nimport { removeFromCart } from \"../../store/actions/cart\";\nimport Card from \"../UI/Card\";\n\nvar PopUpModal = function PopUpModal(props) {\n  var cartTotalAmount = useSelector(function (state) {\n    return state.cart.totalAmount;\n  });\n  var cartItems = useSelector(function (state) {\n    var transformedCartItems = [];\n\n    for (var key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        productImage: state.cart.items[key].productImage,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n\n    return transformedCartItems.sort(function (a, b) {\n      return a.productId > b.productId ? 1 : -1;\n    });\n  });\n  var dispatch = useDispatch();\n  return React.createElement(Modal, {\n    transparent: true,\n    visible: props.visible,\n    animationType: \"slide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.ModalView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.ModalHeight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: Platform.OS === \"android\" ? \"md-close-circle-outline\" : \"ios-close\",\n    size: 40,\n    color: Colors.white,\n    style: styles.closeIcon,\n    onPress: props.onCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: cartItems,\n    keyExtractor: function keyExtractor(item) {\n      return item.productId;\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(CartItem, {\n        quantity: itemData.item.quantity,\n        title: itemData.item.productTitle,\n        image: itemData.item.productImage,\n        amount: itemData.item.sum,\n        onDecrease: function onDecrease() {\n          dispatch(decrease(itemData.item.productId));\n        },\n        onIncrease: function onIncrease() {\n          dispatch(increase(itemData.item.productId));\n        },\n        onDelete: function onDelete() {\n          dispatch(removeFromCart(itemData.item.productId));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: props.onSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, React.createElement(Card, {\n    style: styles.Container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.placeOrder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, \"Checkout\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: styles.amount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"\\u09F3\", Math.round(cartTotalAmount.toFixed(2) * 100) / 100))))))));\n};\n\nexport var screenOptions = {\n  headerTitle: \"Your Cart\"\n};\nvar styles = StyleSheet.create({\n  ModalView: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  },\n  ModalHeight: {\n    width: \"100%\",\n    height: \"100%\",\n    paddingTop: 200,\n    backgroundColor: \"#00000090\"\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10\n  },\n  closeIcon: {\n    backgroundColor: \"red\",\n    paddingHorizontal: 8,\n    borderRadius: 30\n  },\n  screen: {\n    flex: 1,\n    paddingHorizontal: 10\n  },\n  Container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary,\n    paddingHorizontal: 30,\n    paddingVertical: 5,\n    marginHorizontal: 10,\n    marginBottom: 5\n  },\n  placeOrder: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#ffffff\"\n  },\n  amount: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: Colors.primary,\n    padding: 5,\n    backgroundColor: Colors.white,\n    fontSize: 14,\n    borderRadius: 10\n  }\n});\nexport default PopUpModal;","map":{"version":3,"sources":["/home/mizan/MobileApp/Grocery/components/shop/PopUpModal.js"],"names":["React","useSelector","useDispatch","Ionicons","Colors","CartItem","decrease","increase","addOrder","removeFromCart","Card","PopUpModal","props","cartTotalAmount","state","cart","totalAmount","cartItems","transformedCartItems","key","items","push","productId","productTitle","productPrice","productImage","quantity","sum","sort","a","b","dispatch","visible","styles","ModalView","ModalHeight","buttonContainer","Platform","OS","white","closeIcon","onCancel","screen","item","itemData","onSelect","Container","placeOrder","amount","Math","round","toFixed","screenOptions","headerTitle","StyleSheet","create","flex","justifyContent","alignItems","width","height","paddingTop","backgroundColor","flexDirection","padding","paddingHorizontal","borderRadius","primary","paddingVertical","marginHorizontal","marginBottom","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Text, FlatList, Button, Modal, TouchableOpacity, StyleSheet } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport Colors from \"../../constants/Colors\";\nimport CartItem from \"./CartItem\";\nimport { decrease } from \"../../store/actions/cart\";\nimport { increase } from \"../../store/actions/cart\";\nimport { addOrder } from \"../../store/actions/orders\";\nimport { removeFromCart } from \"../../store/actions/cart\";\nimport Card from \"../UI/Card\"\n\nconst PopUpModal = (props) => {\n  const cartTotalAmount = useSelector((state) => state.cart.totalAmount);\n  const cartItems = useSelector((state) => {\n    const transformedCartItems = [];\n    for (const key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        productImage: state.cart.items[key].productImage,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum,\n      });\n    }\n    return transformedCartItems.sort((a, b) =>\n      a.productId > b.productId ? 1 : -1\n    );\n  });\n  const dispatch = useDispatch();\n\n  // const submitOrder = () => {\n  //   props.onNavigate\n  //   // dispatch(addOrder(cartItems, cartTotalAmount));\n    \n  // }\n\n  return (\n    <Modal transparent visible={props.visible}    animationType=\"slide\">\n      <View style={styles.ModalView}>\n      <View style={styles.ModalHeight}>\n        <View style={styles.buttonContainer}>\n            <Ionicons name={\n                Platform.OS === \"android\"\n                  ? \"md-close-circle-outline\" : \"ios-close\"}\n              size={40}\n              color={Colors.white}\n              style={styles.closeIcon}\n              onPress={props.onCancel}\n            />\n          </View>\n            <View style={styles.screen}>\n                <FlatList\n                  data={cartItems}\n                  keyExtractor={(item) => item.productId}\n                  renderItem={(itemData) => (\n                    <CartItem\n                      quantity={itemData.item.quantity}\n                      title={itemData.item.productTitle}\n                      image={itemData.item.productImage}\n                      amount={itemData.item.sum}\n                      onDecrease={() => {\n                        dispatch(decrease(itemData.item.productId));\n                      }}\n                      onIncrease={() => {\n                        dispatch(increase(itemData.item.productId));\n                      }}\n                      onDelete={() => {\n                        dispatch(removeFromCart(itemData.item.productId));\n                      }}\n                    />\n                  )}\n                />\n                <TouchableOpacity \n                    onPress={props.onSelect}>\n                <Card style={styles.Container}>\n                  <Text style={styles.placeOrder}>Checkout</Text>\n                  <View>\n                    <Text style={styles.amount}>\n                      ৳{Math.round(cartTotalAmount.toFixed(2) * 100) / 100}\n                    </Text>\n                  </View>\n                </Card>\n              </TouchableOpacity>\n            </View>\n        </View>\n       </View>\n    </Modal>    \n  );\n};\n\nexport const screenOptions = {\n  headerTitle: \"Your Cart\",\n};\n\nconst styles = StyleSheet.create({\n  ModalView: { \n      flex: 1,\n      justifyContent: 'flex-end',\n      alignItems: 'center' \n  },\n  ModalHeight: {\n  width: \"100%\",\n  height: \"100%\",\n  paddingTop: 200,\n  backgroundColor: \"#00000090\"\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 10,\n  },\n  closeIcon: {\n    backgroundColor: \"red\",\n    paddingHorizontal: 8,\n    borderRadius: 30\n  },\n  screen: {\n    flex:1, \n    paddingHorizontal: 10,\n    \n  },\n  Container: { \n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary,\n    paddingHorizontal: 30,\n    paddingVertical: 5,\n    marginHorizontal: 10,\n    marginBottom:5\n  },\n  placeOrder: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#ffffff\",\n  },\n  amount: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: Colors.primary,\n    padding: 5,\n    backgroundColor: Colors.white,\n    fontSize: 14,\n    borderRadius: 10\n  },\n});\n\nexport default PopUpModal;\n"]},"metadata":{},"sourceType":"module"}