{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/mizan/MobileApp/Grocery/components/shop/CartButton.js\";\n\nimport React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from \"../../constants/Colors\";\nimport Card from \"../../components/UI/Card\";\n\nvar CartButtonScreen = function CartButtonScreen(props) {\n  var cartTotalAmount = useSelector(function (state) {\n    return state.cart.totalAmount;\n  });\n  var cartItems = useSelector(function (state) {\n    var transformedCartItems = [];\n\n    for (var key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum\n      });\n    }\n\n    return transformedCartItems.sort(function (a, b) {\n      return a.productId > b.productId ? 1 : -1;\n    });\n  });\n  return React.createElement(TouchableOpacity, {\n    onPress: props.onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }\n  }, React.createElement(Card, {\n    style: styles.Container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.cartItems,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Items: \", cartItems.length)), React.createElement(Text, {\n    style: styles.placeOrder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Order Now\"), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.amount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, \"\\u09F3\", Math.round(cartTotalAmount.toFixed(2) * 100) / 100))));\n};\n\nvar styles = StyleSheet.create({\n  Container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary,\n    paddingHorizontal: 30,\n    paddingVertical: 5,\n    marginHorizontal: 10,\n    marginBottom: 5\n  },\n  cartItems: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#ffffff\"\n  },\n  amount: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: Colors.primary,\n    padding: 5,\n    backgroundColor: Colors.white,\n    fontSize: 14,\n    borderRadius: 10\n  },\n  placeOrder: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#ffffff\"\n  }\n});\nexport default CartButtonScreen;","map":{"version":3,"sources":["/home/mizan/MobileApp/Grocery/components/shop/CartButton.js"],"names":["React","useSelector","useDispatch","Colors","Card","CartButtonScreen","props","cartTotalAmount","state","cart","totalAmount","cartItems","transformedCartItems","key","items","push","productId","productTitle","productPrice","quantity","sum","sort","a","b","onPress","styles","Container","length","placeOrder","amount","Math","round","toFixed","StyleSheet","create","flexDirection","justifyContent","alignItems","backgroundColor","primary","paddingHorizontal","paddingVertical","marginHorizontal","marginBottom","fontSize","fontWeight","color","padding","white","borderRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport Colors  from '../../constants/Colors';\nimport Card from \"../../components/UI/Card\"\n\nconst CartButtonScreen = (props) => {\n    const cartTotalAmount = useSelector((state) => state.cart.totalAmount);\n\n    const cartItems = useSelector((state) => {\n    const transformedCartItems = [];\n    for (const key in state.cart.items) {\n      transformedCartItems.push({\n        productId: key,\n        productTitle: state.cart.items[key].productTitle,\n        productPrice: state.cart.items[key].productPrice,\n        quantity: state.cart.items[key].quantity,\n        sum: state.cart.items[key].sum,\n      });\n    }\n    return transformedCartItems.sort((a, b) =>\n      a.productId > b.productId ? 1 : -1\n    );\n  });\n\n  return (\n     <TouchableOpacity \n         onPress={props.onPress}>\n      <Card style={styles.Container}>\n        <View>\n          <Text style={styles.cartItems}>Items: {cartItems.length}</Text>\n        </View>\n        <Text style={styles.placeOrder}>Order Now</Text>\n        <View>\n         <Text style={styles.amount}>\n            à§³{Math.round(cartTotalAmount.toFixed(2) * 100) / 100}\n          </Text>\n        </View>\n      </Card>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n    Container: { \n     flexDirection: \"row\",\n     justifyContent: \"space-between\",\n     alignItems: \"center\",\n     backgroundColor: Colors.primary,\n     paddingHorizontal: 30,\n     paddingVertical: 5,\n     marginHorizontal: 10,\n     marginBottom:5\n    },\n  cartItems: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#ffffff\",\n  },\n  amount: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: Colors.primary,\n    padding: 5,\n    backgroundColor: Colors.white,\n    fontSize: 14,\n    borderRadius: 10\n  },\n  placeOrder: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#ffffff\",\n  },\n});\n\nexport default CartButtonScreen;"]},"metadata":{},"sourceType":"module"}