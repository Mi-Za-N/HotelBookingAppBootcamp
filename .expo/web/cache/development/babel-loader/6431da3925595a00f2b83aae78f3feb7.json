{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/mizan/MobileApp/Grocery/App.js\";\nimport React, { useState } from \"react\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { productListReducer } from \"./store/reducers/products\";\nimport cartReducer from \"./store/reducers/cart\";\nimport ordersReducer from \"./store/reducers/orders\";\nimport ShopNavigator from \"./navigation/ShopNavigator\";\nvar initialState = {};\nvar reducer = combineReducers({\n  productList: productListReducer,\n  cart: cartReducer,\n  orders: ordersReducer\n});\nvar composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(reducer, initialState, composeEnhancer(applyMiddleware(thunk)));\n\nvar fetchFonts = function fetchFonts() {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\")\n  });\n};\n\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: fetchFonts,\n      onFinish: function onFinish() {\n        setFontLoded(true);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(ShopNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/mizan/MobileApp/Grocery/App.js"],"names":["React","useState","createStore","combineReducers","compose","applyMiddleware","thunk","Provider","AppLoading","Font","productListReducer","cartReducer","ordersReducer","ShopNavigator","initialState","reducer","productList","cart","orders","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","fetchFonts","loadAsync","require","App","fontLoaded","setFontLoded"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,SAAQC,kBAAR;AACA,OAAOC,WAAP;AACA,OAAOC,aAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC9Ba,EAAAA,WAAW,EAAEN,kBADiB;AAE7BO,EAAAA,IAAI,EAAEN,WAFuB;AAG9BO,EAAAA,MAAM,EAAEN;AAHsB,CAAD,CAA/B;AAKA,IAAMO,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CjB,OAAvE;AACA,IAAMkB,KAAK,GAAGpB,WAAW,CACvBa,OADuB,EAEvBD,YAFuB,EAGvBK,eAAe,CAACd,eAAe,CAACC,KAAD,CAAhB,CAHQ,CAAzB;;AAkBA,IAAMiB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SAAOd,IAAI,CAACe,SAAL,CAAe;AACpB,iBAAaC,OAAO,uCADA;AAEpB,sBAAkBA,OAAO;AAFL,GAAf,CAAP;AAID,CALD;;AAOA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACOzB,QAAQ,CAAC,KAAD,CADf;AAAA;AAAA,MACrB0B,UADqB;AAAA,MACTC,YADS;;AAG5B,MAAI,CAACD,UAAL,EAAiB;AACf,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEJ,UADd;AAEE,MAAA,QAAQ,EAAE,oBAAM;AACdK,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAED,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { AppLoading } from \"expo\";\nimport * as Font from \"expo-font\";\n\nimport {productListReducer} from \"./store/reducers/products\";\nimport cartReducer from \"./store/reducers/cart\";\nimport ordersReducer from \"./store/reducers/orders\";\nimport ShopNavigator from \"./navigation/ShopNavigator\";\n\nconst initialState = {};\nconst reducer = combineReducers({\n  productList: productListReducer,\n   cart: cartReducer,\n  orders: ordersReducer,\n});\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\n\n\n// const rootReducer = combineReducers({\n//   productList: productListReducer,\n//   cart: cartReducer,\n//   orders: ordersReducer,\n// });\n\n// const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// const store = createStore(rootReducer, composeEnhancer());\n\nconst fetchFonts = () => {\n  return Font.loadAsync({\n    \"open-sans\": require(\"./assets/fonts/OpenSans-Regular.ttf\"),\n    \"open-sans-bold\": require(\"./assets/fonts/OpenSans-Bold.ttf\"),\n  });\n};\n\nexport default function App() {\n  const [fontLoaded, setFontLoded] = useState(false);\n\n  if (!fontLoaded) {\n    return (\n      <AppLoading\n        startAsync={fetchFonts}\n        onFinish={() => {\n          setFontLoded(true);\n        }}\n      />\n    );\n  }\n\n  return (\n    <Provider store={store}>\n      <ShopNavigator />\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}